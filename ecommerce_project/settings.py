"""
Django settings for ecommerce_project project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os 
from pathlib import Path
from decimal import Decimal
import dj_database_url # Añade esta si no la tienes, es útil para DB_URL
from dotenv import load_dotenv # Para cargar variables de entorno en desarrollo

BASE_DIR = Path(__file__).resolve().parent.parent
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
# Asegúrate de que STATICFILES_DIRS esté configurado correctamente
# para que Django pueda encontrar tus archivos estáticos.
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'), # <-- ¡Así es como debería estar!
]
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'excel_files') # Apunta a tu nueva carpeta 'excel_files'

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-rgj+s!a#y(5+kow9gw#$$x7w5q$gzte+fg!lh(!g*0$lts8u_s'
SECRET_KEY = 'django-insecure-m_k#w+o%2b@t%9e+6)7&g_q^i$5!j8)u!7v0e7x0e(6q9t5w!l!'
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY')

if not SECRET_KEY and not DEBUG:
    raise Exception("SECRET_KEY must be set in production environment!")

# SECURITY WARNING: don't run with debug turned on in production!
# Directorio donde Django buscará los archivos de media (fotos de productos, excel, etc.)
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# La URL desde la que se servirán los archivos de media
MEDIA_URL = '/media/'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DJANGO_DEBUG', 'False') == 'True' # Carga desde variable de entorno o por defecto False

ALLOWED_HOSTS = os.environ.get('DJANGO_ALLOWED_HOSTS', '127.0.0.1,localhost').split(',')


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'productos',
    'rest_framework',
    'channels',
    #'chat',
    'users',
    'crispy_forms', # Asegúrate de que esto esté también si lo usas
    'crispy_bootstrap4'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ecommerce_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')], # <--- ¡ASEGÚRATE DE QUE ESTA LÍNEA ESTÉ ASÍ!
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# ...
WSGI_APPLICATION = 'ecommerce_project.wsgi.application'
ASGI_APPLICATION = 'ecommerce_project.asgi.application' # <--- ¡ASEGÚRATE DE QUE ESTÉ ASÍ!
# ...


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': dj_database_url.config(
        default=os.environ.get('DATABASE_URL'), # Carga la URL de la DB desde las variables de entorno
        conn_max_age=600 # Opcional: Tiempo máximo de vida de la conexión en segundos
    )
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Configuración de Django Channels
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.pubsub.RedisPubSubChannelLayer', # O 'channels_redis.core.RedisChannelLayer' para una configuración más básica
        'CONFIG': {
            "hosts": [('127.0.0.1', 6379)], # La dirección y puerto de tu servidor Redis
        },
    },
}
AWS_ACCESS_KEY_ID = os.environ.get('AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = os.environ.get('AWS_SECRET_ACCESS_KEY')
AWS_STORAGE_BUCKET_NAME = os.environ.get('AWS_STORAGE_BUCKET_NAME')
AWS_S3_REGION_NAME = os.environ.get('AWS_S3_REGION_NAME') # Por ejemplo, 'us-east-1'

AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME
AWS_S3_FILE_OVERWRITE = False # Evita sobrescribir archivos con el mismo nombre
AWS_DEFAULT_ACL = None # Define permisos por defecto para objetos subidos a S3
AWS_QUERYSTRING_AUTH = False # No incluir parámetros de autenticación en la URL

# Configuración para archivos estáticos
STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
STATIC_URL = 'https://%s/%s/' % (AWS_S3_CUSTOM_DOMAIN, 'static') # URL para estáticos en S3

# Configuración para archivos de medios (media files)
DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
MEDIA_URL = 'https://%s/%s/' % (AWS_S3_CUSTOM_DOMAIN, 'media') # URL para medios en S3
# Configuración de autenticación
LOGIN_REDIRECT_URL = '/'  # Redirige a la página principal después de iniciar sesión
LOGOUT_REDIRECT_URL = '/' # Redirige a la página principal después de cerrar sesión
LOGIN_URL = '/accounts/login/' # La URL de tu página de inicio de sesión
IVA_RATE = Decimal('0.16') # 16% de IVA, usa Decimal para precisión
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

load_dotenv()
